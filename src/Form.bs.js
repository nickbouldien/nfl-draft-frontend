// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE

import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as $$String from "bs-platform/lib/es6/string.js";
import * as ReasonReact from "reason-react/src/ReasonReact.js";

var component = ReasonReact.reducerComponent("Form");

function make(alertUser, draftPlayer, _) {
  var submitHelper = function (state) {
    var nonEmptyValue = $$String.trim(state[/* editText */0]);
    if (nonEmptyValue === "") {
      return /* SideEffects */Block.__(1, [(function () {
                    return Curry._1(alertUser, /* () */0);
                  })]);
    } else {
      return /* UpdateWithSideEffects */Block.__(2, [
                /* record */[/* editText */nonEmptyValue],
                (function () {
                    return Curry._1(draftPlayer, nonEmptyValue);
                  })
              ]);
    }
  };
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              var send = param[/* send */3];
              return React.createElement("li", undefined, React.createElement("input", {
                              className: "edit",
                              value: param[/* state */1][/* editText */0],
                              onKeyDown: (function ($$event) {
                                  return Curry._1(send, /* KeyDown */Block.__(0, [$$event.which]));
                                }),
                              onBlur: (function () {
                                  return Curry._1(send, /* Submit */0);
                                }),
                              onChange: (function ($$event) {
                                  return Curry._1(send, /* Change */Block.__(1, [$$event.target.value]));
                                })
                            }));
            }),
          /* initialState */(function () {
              return /* record */[/* editText */""];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action) {
              if (typeof action === "number") {
                return submitHelper;
              } else if (action.tag) {
                var text = action[0];
                return (function () {
                    return /* Update */Block.__(0, [/* record */[/* editText */text]]);
                  });
              } else if (action[0] !== 13) {
                return (function () {
                    return /* NoUpdate */0;
                  });
              } else {
                return submitHelper;
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

export {
  component ,
  make ,
  
}
/* component Not a pure module */
